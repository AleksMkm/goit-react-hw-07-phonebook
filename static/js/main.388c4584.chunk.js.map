{"version":3,"sources":["Components/ContactList/Contact.module.css","Components/Filter/Filter.module.css","Components/Section/Section.module.css","Components/Container/Container.module.css","Components/IconButton/IconButton.module.css","Components/ContactList/ContactList.module.css","redux/actions.js","redux/reducer.js","redux/store.js","Components/Container/Container.js","Components/IconButton/IconButton.js","Components/ContactList/Contact.js","redux/selectors.js","Components/ContactList/ContactList.js","Components/ContactForm/ContactForm.js","Components/Section/Section.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactForm/ContactForm.module.css"],"names":["module","exports","actions","addContact","createAction","name","number","payload","id","uniqueId","deleteContact","changeFilter","contacts","createReducer","state","filter","contact","rootReducer","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","Container","children","className","styles","container","IconButton","onClick","allyProps","type","iconBtn","defaultProps","Contact","phone","deleteHandler","icon","aria-label","getContacts","getFilter","getFilteredContacts","normalizedFilter","toLowerCase","trim","includes","ContactList","useSelector","filteredContacts","dispatch","useDispatch","displayedContacts","contactList","map","ContactForm","useForm","register","handleSubmit","errors","reset","btn","useRef","form","onSubmit","data","find","alert","current","blur","label","ref","required","minLength","maxLength","pattern","addField","placeholder","error","Section","title","section","Filter","searchField","value","onChange","e","target","App","length","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.388c4584.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__2m4yp\",\"icon\":\"Contact_icon__3wKFx\",\"name\":\"Contact_name__3yNLi\",\"phone\":\"Contact_phone__3L8gi\",\"btn\":\"Contact_btn__35Hjs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__3EnQb\",\"title\":\"Filter_title__1clwp\",\"searchField\":\"Filter_searchField__1tli9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3n2rE\",\"title\":\"Section_title__10vwg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__34be5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconBtn\":\"IconButton_iconBtn__3vgG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1byq6\"};","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uniqueId } from 'uuid';\n\nconst addContact = createAction('contact/add', (name, number) => ({\n  payload: {\n    id: uniqueId(),\n    name,\n    number,\n  },\n}));\n\nconst deleteContact = createAction('contact/delete');\n\nconst changeFilter = createAction('filter/change');\n\nconst actions = { addContact, deleteContact, changeFilter };\n\nexport default actions;\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport actions from './actions';\n\nconst contacts = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (state, { payload }) => payload,\n});\n\nconst rootReducer = combineReducers({\n  contacts,\n  filter,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport rootReducer from './reducer';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistor = persistStore(store);\n","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './IconButton.module.css';\n\nfunction IconButton({ children, onClick, ...allyProps }) {\n  return (\n    <button\n      type=\"button\"\n      className={styles.iconBtn}\n      onClick={onClick}\n      {...allyProps}\n    >\n      {children}\n    </button>\n  );\n}\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nIconButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string.isRequired,\n};\n\nexport default IconButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport styles from './Contact.module.css';\nimport IconButton from '../IconButton/';\n\nfunction Contact({ id, name, phone, deleteHandler }) {\n  return (\n    <li key={id} className={styles.contact}>\n      <span className={styles.name}>\n        <AccountCircleIcon className={styles.icon} />\n        {name}\n      </span>\n\n      <span className={styles.phone}>\n        <PhoneIphoneIcon className={styles.icon} />\n        {phone}\n      </span>\n\n      <IconButton onClick={deleteHandler} aria-label=\"delete contact\">\n        <DeleteIcon />\n      </IconButton>\n    </li>\n  );\n}\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  deleteHandler: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","export const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;\n\nexport const getFilteredContacts = state => {\n  const filter = getFilter(state);\n  const contacts = getContacts(state);\n  const normalizedFilter = filter.toLowerCase().trim();\n\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Contact from './Contact';\nimport styles from './ContactList.module.css';\nimport {\n  getContacts,\n  getFilter,\n  getFilteredContacts,\n} from '../../redux/selectors';\nimport actions from '../../redux/actions';\n\nfunction ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  const filteredContacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  const displayedContacts = filter.trim() ? filteredContacts : contacts;\n\n  return (\n    <ul className={styles.contactList}>\n      {displayedContacts.map(contact =>\n        Contact({\n          id: contact.id,\n          name: contact.name,\n          phone: contact.number,\n          deleteHandler: () => dispatch(actions.deleteContact(contact.id)),\n        }),\n      )}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import React, { useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { getContacts } from '../../redux/selectors';\nimport actions from '../../redux/actions';\n\nfunction ContactForm() {\n  const { register, handleSubmit, errors, reset } = useForm();\n  const btn = useRef();\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n      )\n    ) {\n      alert(`${data.name} is already in Phonebook`);\n      return;\n    }\n    dispatch(actions.addContact(data.name.trim(), data.number.trim()));\n    btn.current.blur();\n    reset({});\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\n      <label className={styles.label}>\n        <input\n          ref={register({\n            required: true,\n            minLength: 3,\n            maxLength: 18,\n            pattern: /^[A-Za-z]+([ A-Za-z]+)*$/,\n          })}\n          className={styles.addField}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"name\"\n        />\n        {errors.name && errors.name.type === 'required' && (\n          <p className={styles.error}>Name is required</p>\n        )}\n        {errors.name && errors.name.type === 'minLength' && (\n          <p className={styles.error}>\n            Name is too short. Minimum 3 characters required.\n          </p>\n        )}\n        {errors.name && errors.name.type === 'maxLength' && (\n          <p className={styles.error}>\n            Name is too long. Maximum 18 characters allowed.\n          </p>\n        )}\n        {errors.name && errors.name.type === 'pattern' && (\n          <p className={styles.error}>Name can contain only english letters.</p>\n        )}\n      </label>\n      <label className={styles.label}>\n        <input\n          ref={register({ required: true, pattern: /^\\d+$/ })}\n          className={styles.addField}\n          type=\"text\"\n          name=\"number\"\n          placeholder=\"xxxx-xx-xx\"\n        />\n        {errors.number && errors.number.type === 'required' && (\n          <p className={styles.error}>Number is required</p>\n        )}\n        {errors.number && errors.number.type === 'pattern' && (\n          <p className={styles.error}>\n            Phone number should consist only from numbers.\n          </p>\n        )}\n      </label>\n      <button ref={btn} className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport styles from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      <p className={styles.title}>{title}</p>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './Filter.module.css';\nimport { getFilter } from '../../redux/selectors';\nimport actions from '../../redux/actions';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <form className={styles.form}>\n      <label>\n        <span className={styles.title}>Find contacts by name</span>\n        <input\n          className={styles.searchField}\n          type=\"text\"\n          value={filter}\n          onChange={e => dispatch(actions.changeFilter(e.target.value))}\n        />\n      </label>\n    </form>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Container from './Components/Container';\nimport ContactList from './Components/ContactList';\nimport ContactForm from './Components/ContactForm';\nimport Section from './Components/Section';\nimport Filter from './Components/Filter';\nimport { getContacts } from './redux/selectors';\n\nfunction App() {\n  const contacts = useSelector(getContacts);\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length ? (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <div>Oops. no contacts here! Let's add some data!</div>\n        )}\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__YfRAB\",\"addField\":\"ContactForm_addField__2Hmk7\",\"btn\":\"ContactForm_btn__2MVEt\",\"label\":\"ContactForm_label__PEI7n\",\"error\":\"ContactForm_error__33TDB\"};"],"sourceRoot":""}