{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/Contact.module.css","Components/Filter/Filter.module.css","Components/Section/Section.module.css","Components/Container/Container.module.css","Components/IconButton/IconButton.module.css","Components/ContactList/ContactList.module.css","redux/actions.js","services/contacts-api.js","redux/operations.js","redux/reducer.js","redux/store.js","Components/Container/Container.js","Components/IconButton/IconButton.js","Components/ContactList/Contact.js","redux/selectors.js","Components/ContactList/ContactList.js","Components/ContactForm/ContactForm.js","Components/Section/Section.js","Components/Filter/Filter.js","Components/Loader/Loader.js","App.js","index.js"],"names":["module","exports","changeFilter","createAction","fetchContacts","a","axios","get","response","data","addContact","name","number","contact","post","deleteContact","id","delete","defaults","baseURL","createAsyncThunk","contactsAPI","contacts","console","log","addedContact","deletedContact","createReducer","fulfilled","_","payload","state","filter","isLoading","pending","rejected","error","action","rootReducer","combineReducers","store","configureStore","reducer","devTools","process","Container","children","className","styles","container","IconButton","onClick","allyProps","type","iconBtn","defaultProps","Contact","phone","deleteHandler","icon","aria-label","getContacts","getFilter","getLoadingData","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","trim","includes","ContactList","useSelector","filteredContacts","dispatch","useDispatch","displayedContacts","contactList","map","ContactForm","useForm","register","handleSubmit","errors","reset","btn","useRef","form","onSubmit","find","alert","current","blur","label","ref","required","minLength","maxLength","pattern","addField","placeholder","Section","title","section","Filter","searchField","value","onChange","e","target","Loader","size","margin","color","loading","App","useEffect","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed3e7157.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__YfRAB\",\"addField\":\"ContactForm_addField__2Hmk7\",\"btn\":\"ContactForm_btn__2MVEt\",\"label\":\"ContactForm_label__PEI7n\",\"error\":\"ContactForm_error__33TDB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__2m4yp\",\"icon\":\"Contact_icon__3wKFx\",\"name\":\"Contact_name__3yNLi\",\"phone\":\"Contact_phone__3L8gi\",\"btn\":\"Contact_btn__35Hjs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__3EnQb\",\"title\":\"Filter_title__1clwp\",\"searchField\":\"Filter_searchField__1tli9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__3n2rE\",\"title\":\"Section_title__10vwg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__34be5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconBtn\":\"IconButton_iconBtn__3vgG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1byq6\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('filter/change');\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport async function fetchContacts() {\n  const response = await axios.get('/contacts');\n  return response.data;\n}\n\nexport async function addContact(name, number) {\n  const contact = {\n    name,\n    number,\n  };\n\n  const response = await axios.post('/contacts', contact);\n  return response.data;\n}\n\nexport async function deleteContact(id) {\n  await axios.delete(`/contacts/${id}`);\n  return id;\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit';\nimport * as contactsAPI from '../services/contacts-api';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    try {\n      const contacts = await contactsAPI.fetchContacts();\n      return contacts;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addContact',\n  async ({ name, number }) => {\n    try {\n      const addedContact = await contactsAPI.addContact(name, number);\n      return addedContact;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n);\n\nexport const deleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async id => {\n    try {\n      const deletedContact = contactsAPI.deleteContact(id);\n      return deletedContact;\n    } catch (error) {\n      console.log(error);\n    }\n  },\n);\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './actions';\nimport { fetchContacts, addContact, deleteContact } from './operations';\n\nconst contacts = createReducer([], {\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContact.fulfilled]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContacts.pending]: () => true,\n  [fetchContacts.fulfilled]: () => false,\n  [fetchContacts.rejected]: () => false,\n  [addContact.pending]: () => true,\n  [addContact.fulfilled]: () => false,\n  [addContact.rejected]: () => false,\n  [deleteContact.pending]: () => true,\n  [deleteContact.fulfilled]: () => false,\n  [deleteContact.rejected]: () => false,\n});\n\nconst error = createReducer(null, {\n  [fetchContacts.rejected]: (_, action) => action.payload,\n  [fetchContacts.pending]: () => null,\n  [addContact.rejected]: (_, action) => action.payload,\n  [addContact.pending]: () => null,\n  [deleteContact.rejected]: (_, action) => action.payload,\n  [deleteContact.pending]: () => null,\n});\n\nconst rootReducer = combineReducers({\n  contacts,\n  filter,\n  isLoading,\n  error,\n});\n\nexport default rootReducer;\n","import { configureStore } from '@reduxjs/toolkit';\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from 'redux-persist';\n// import storage from 'redux-persist/lib/storage';\nimport rootReducer from './reducer';\n\n// const persistConfig = {\n//   key: 'contacts',\n//   storage,\n//   blacklist: ['filter'],\n// };\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n// ];\n\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  // middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// export const persistor = persistStore(store);\n","import styles from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={styles.container}>{children}</div>;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './IconButton.module.css';\n\nfunction IconButton({ children, onClick, ...allyProps }) {\n  return (\n    <button\n      type=\"button\"\n      className={styles.iconBtn}\n      onClick={onClick}\n      {...allyProps}\n    >\n      {children}\n    </button>\n  );\n}\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nIconButton.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  'aria-label': PropTypes.string.isRequired,\n};\n\nexport default IconButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport styles from './Contact.module.css';\nimport IconButton from '../IconButton/';\n\nfunction Contact({ id, name, phone, deleteHandler }) {\n  return (\n    <li key={id} className={styles.contact}>\n      <span className={styles.name}>\n        <AccountCircleIcon className={styles.icon} />\n        {name}\n      </span>\n\n      <span className={styles.phone}>\n        <PhoneIphoneIcon className={styles.icon} />\n        {phone}\n      </span>\n\n      <IconButton onClick={deleteHandler} aria-label=\"delete contact\">\n        <DeleteIcon />\n      </IconButton>\n    </li>\n  );\n}\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  deleteHandler: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;\n\nexport const getLoadingData = state => state.isLoading;\n\nexport const getError = state => state.error;\n\nexport const getFilteredContacts = createSelector(\n  [getFilter, getContacts],\n  (filter, contacts) => {\n    const normalizedFilter = filter.toLowerCase().trim();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Contact from './Contact';\nimport styles from './ContactList.module.css';\nimport {\n  getContacts,\n  getFilter,\n  getFilteredContacts,\n} from '../../redux/selectors';\nimport { deleteContact } from '../../redux/operations';\n\nfunction ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = useSelector(getFilteredContacts);\n  const dispatch = useDispatch();\n\n  const displayedContacts = filter.trim() ? filteredContacts : contacts;\n\n  return (\n    <ul className={styles.contactList}>\n      {displayedContacts.map(contact =>\n        Contact({\n          id: contact.id,\n          name: contact.name,\n          phone: contact.number,\n          deleteHandler: () => dispatch(deleteContact(contact.id)),\n        }),\n      )}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import React, { useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { getContacts } from '../../redux/selectors';\nimport { addContact } from '../../redux/operations';\n\nfunction ContactForm() {\n  const { register, handleSubmit, errors, reset } = useForm();\n  const btn = useRef();\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const onSubmit = data => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n      )\n    ) {\n      alert(`${data.name} is already in Phonebook`);\n      return;\n    }\n    dispatch(\n      addContact({ name: data.name.trim(), number: data.number.trim() }),\n    );\n    btn.current.blur();\n    reset({});\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\n      <label className={styles.label}>\n        <input\n          ref={register({\n            required: true,\n            minLength: 3,\n            maxLength: 18,\n            pattern: /^[A-Za-z]+([ A-Za-z]+)*$/,\n          })}\n          className={styles.addField}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"name\"\n        />\n        {errors.name && errors.name.type === 'required' && (\n          <p className={styles.error}>Name is required</p>\n        )}\n        {errors.name && errors.name.type === 'minLength' && (\n          <p className={styles.error}>\n            Name is too short. Minimum 3 characters required.\n          </p>\n        )}\n        {errors.name && errors.name.type === 'maxLength' && (\n          <p className={styles.error}>\n            Name is too long. Maximum 18 characters allowed.\n          </p>\n        )}\n        {errors.name && errors.name.type === 'pattern' && (\n          <p className={styles.error}>Name can contain only english letters.</p>\n        )}\n      </label>\n      <label className={styles.label}>\n        <input\n          ref={register({ required: true, pattern: /^\\d+$/ })}\n          className={styles.addField}\n          type=\"text\"\n          name=\"number\"\n          placeholder=\"xxxx-xx-xx\"\n        />\n        {errors.number && errors.number.type === 'required' && (\n          <p className={styles.error}>Number is required</p>\n        )}\n        {errors.number && errors.number.type === 'pattern' && (\n          <p className={styles.error}>\n            Phone number should consist only from numbers.\n          </p>\n        )}\n      </label>\n      <button ref={btn} className={styles.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport styles from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      <p className={styles.title}>{title}</p>\n      {children}\n    </section>\n  );\n}\n\nexport default Section;\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './Filter.module.css';\nimport { getFilter } from '../../redux/selectors';\nimport { changeFilter } from '../../redux/actions';\n\nfunction Filter() {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <form className={styles.form}>\n      <label>\n        <span className={styles.title}>Find contacts by name</span>\n        <input\n          className={styles.searchField}\n          type=\"text\"\n          value={filter}\n          onChange={e => dispatch(changeFilter(e.target.value))}\n        />\n      </label>\n    </form>\n  );\n}\n\nexport default Filter;\n","import React from 'react';\n// import { css } from '@emotion/core';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\nfunction Loader() {\n  return (\n    <BeatLoader\n      // css={css`\n      //   margin-top: 140px;\n      // `}\n      size={30}\n      margin={10}\n      color={'black'}\n      loading={true}\n    />\n  );\n}\n\nexport default Loader;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Container from './Components/Container';\nimport ContactList from './Components/ContactList';\nimport ContactForm from './Components/ContactForm';\nimport Section from './Components/Section';\nimport Filter from './Components/Filter';\nimport { getContacts, getLoadingData } from './redux/selectors';\nimport { fetchContacts } from './redux/operations';\nimport Loader from './Components/Loader';\n\nfunction App() {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getLoadingData);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, []);\n\n  return (\n    <Container>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        {isLoading ? (\n          <Loader />\n        ) : contacts.length ? (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <div>Oops. no contacts here! Let's add some data!</div>\n        )}\n      </Section>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}